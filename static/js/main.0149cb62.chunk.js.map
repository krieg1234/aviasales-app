{"version":3,"sources":["Components/Header.js","Functions/getTickets.js","Actions/index.js","Functions/makeFakeTicketsList.js","Components/FilterBar.js","Components/TicketCard.js","Functions/convertTime.js","Components/TicketsList.js","Pages/MainPage.js","Components/Footer.js","App.js","reportWebVitals.js","Functions/sortByCallbacks.js","Functions/filterCallbacks.js","Reducers/tickets.js","Reducers/index.js","index.js"],"names":["Header","Container","fluid","style","backgroundColor","color","display","justifyContent","padding","React","Component","getTickets","a","axios","get","config","data","searchId","tickets","stop","buildTicketsList","createAction","sortTicketsList","addFilter","removeFilter","updateTicketsListRequest","updateTicketsListSuccess","updateTicketsListFailure","updateTicketsList","dispatch","price","carrier","segments","origin","destination","date","stops","duration","FilterBar","filterTasksListHandler","e","preventDefault","props","updateFilterHandler","value","typeOfFilter","payload","filterType","target","checked","Form","onSubmit","this","className","Group","Label","Check","type","label","onInput","Infinity","ticketsCount","connect","state","buildedTicketsList","length","filters","Styles","styled","div","TickedCard","Card","Row","Col","md","fontWeight","fontSize","Image","src","map","originDateParsed","Date","parse","durationParsed","mins","minutes","Math","trunc","convertMinToHours","distDateParsed","originTime","toLocaleTimeString","distTime","join","uniqueId","TicketsList","ticket","TicketCard","byId","MainPage","sortTicketsListByPriceEvent","t","Tabs","defaultActiveKey","id","onSelect","Tab","eventKey","title","Footer","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sortByPrice","first","second","firstParam","secondParam","sortByTime","firstTicketDurations","secondTicketDurations","fastetsFirstTicket","_","fastetsSecondTicket","filterByStops","stopsFilter","maxCountOfStops","stopsInTicket","defaultTickets","allTickets","sortOption","byStops","handleActions","actions","action","newById","filter","index","reduce","acc","newAllTickets","Object","keys","console","log","newSortOption","v","mapFilters","filtersTypes","filtredTickets","results","forEach","push","includes","sortBy","mapSortOption","sortedTickets","sort","combineReducers","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"wQAgBeA,E,uKAXX,OACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,QAA7D,SACE,cAACJ,EAAA,EAAD,CAAWE,MAAO,CAAEG,QAAS,OAAQC,eAAgB,SAAUC,QAAS,QAAxE,SACE,mE,GALWC,IAAMC,W,sGCMZC,EAPC,uCAAG,oCAAAC,EAAA,sEACIC,IAAMC,IAAI,+CADd,cACXC,EADW,gBAEMF,IAAMC,IAAN,gEAAmEC,EAAOC,KAAKC,WAFrF,uBAETD,EAFS,EAETA,KACAE,EAAkBF,EAAlBE,QAASC,EAASH,EAATG,KAHA,kBAIV,CAAED,UAASC,SAJD,2CAAH,qDCGHC,EAAmBC,YAAa,sBAChCC,EAAkBD,YAAa,qBAC/BE,EAAYF,YAAa,cACzBG,EAAeH,YAAa,iBAE5BI,EAA2BJ,YAAa,+BACxCK,EAA2BL,YAAa,+BACxCM,EAA2BN,YAAa,+BAExCO,EAAiB,uCAAG,WAAOC,GAAP,iBAAAjB,EAAA,6DAC/BiB,EAASJ,KADsB,kBAGHd,IAHG,gBAGrBO,EAHqB,EAGrBA,QACRW,EAASH,EAAyBR,IAClCW,EAAST,KALoB,kDAO7BS,EAASF,KCpBJ,CAAC,CACNG,MAAO,IACPC,QAAS,SACTC,SAAU,CACR,CACEC,OAAQ,SACRC,YAAa,SACbC,KAAM,SACNC,MAAO,CAAC,SAAU,UAClBC,SAAU,GAEZ,CACEJ,OAAQ,SACRC,YAAa,SACbC,KAAM,SACNC,MAAO,CAAC,UACRC,SAAU,KAIhB,CACEP,MAAO,IACPC,QAAS,SACTC,SAAU,CACR,CACEC,OAAQ,SACRC,YAAa,SACbC,KAAM,SACNC,MAAO,CAAC,SAAU,UAClBC,SAAU,GAEZ,CACEJ,OAAQ,SACRC,YAAa,SACbC,KAAM,SACNC,MAAO,CAAC,UACRC,SAAU,KAIhB,CACEP,MAAO,IACPC,QAAS,SACTC,SAAU,CACR,CACEC,OAAQ,SACRC,YAAa,SACbC,KAAM,SACNC,MAAO,CAAC,UACRC,SAAU,GAEZ,CACEJ,OAAQ,SACRC,YAAa,SACbC,KAAM,SACNC,MAAO,CAAC,UACRC,SAAU,KAIhB,CACEP,MAAO,IACPC,QAAS,SACTC,SAAU,CACR,CACEC,OAAQ,SACRC,YAAa,SACbC,KAAM,SACNC,MAAO,CAAC,SAAU,SAAU,SAAU,UACtCC,SAAU,GAEZ,CACEJ,OAAQ,SACRC,YAAa,SACbC,KAAM,SACNC,MAAO,CAAC,SAAU,UAClBC,SAAU,MD/De,0DAAH,sDEExBC,E,4MACJC,uBAAyB,SAACC,GACxBA,EAAEC,kBAEFZ,EADqB,EAAKa,MAAlBb,UACCT,M,EAGXuB,oBAAsB,SAACC,EAAOC,GAAR,OAAyB,SAACL,GAAO,IAC7CX,EAAa,EAAKa,MAAlBb,SACFiB,EAAU,CACdC,WAAYF,EACZD,SAEEJ,EAAEQ,OAAOC,QAASpB,EAASN,EAAUuB,IACpCjB,EAASL,EAAasB,IAC3BjB,EAAST,O,uDAKT,OACE,eAAC8B,EAAA,EAAD,CAAMC,SAAUC,KAAKb,uBAAwBc,UAAU,gCAAvD,UACE,eAACH,EAAA,EAAKI,MAAN,WACE,cAACJ,EAAA,EAAKK,MAAN,CAAYF,UAAU,2BAAtB,iIACA,cAACH,EAAA,EAAKM,MAAN,CAAYH,UAAU,OAAOI,KAAK,WAAWC,MAAM,qBAAMC,QAASP,KAAKT,oBAAoBiB,IAAU,aACrG,cAACV,EAAA,EAAKM,MAAN,CAAYH,UAAU,OAAOI,KAAK,WAAWC,MAAM,4EAAgBC,QAASP,KAAKT,oBAAoB,EAAG,aACxG,cAACO,EAAA,EAAKM,MAAN,CAAYH,UAAU,OAAOI,KAAK,WAAWC,MAAM,2DAAcC,QAASP,KAAKT,oBAAoB,EAAG,aACtG,cAACO,EAAA,EAAKM,MAAN,CAAYH,UAAU,OAAOI,KAAK,WAAWC,MAAM,2DAAcC,QAASP,KAAKT,oBAAoB,EAAG,aACtG,cAACO,EAAA,EAAKM,MAAN,CAAYH,UAAU,OAAOI,KAAK,WAAWC,MAAM,2DAAcC,QAASP,KAAKT,oBAAoB,EAAG,gBAExG,eAACO,EAAA,EAAKK,MAAN,0DAAsBH,KAAKV,MAAMmB,aAAjC,wD,GA9BgBpD,IAAMC,WAoCfoD,eA5CS,SAACC,GAKvB,MAJc,CACZF,aAAcE,EAAM7C,QAAQ8C,mBAAmBC,OAC/CC,QAASH,EAAM7C,QAAQgD,WAyCZJ,CAAyBxB,G,8KC7CxC,IAAM6B,EAASC,IAAOC,IAAV,KAaNC,E,uKACM,IAAD,EAC8BlB,KAAKV,MAAM1B,KAAxCc,EADD,EACCA,MAAOC,EADR,EACQA,QAASC,EADjB,EACiBA,SAExB,OACE,cAACmC,EAAD,UACE,eAACI,EAAA,EAAD,CAAMlB,UAAU,+CAAhB,UACE,eAACmB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAIrB,UAAU,QAAQlD,MAAO,CAAEwE,WAAY,MAAOC,SAAU,OAAQvE,MAAO,WAAnF,UAAiGyB,EAAjG,aACA,cAAC2C,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,CAAOC,IAAG,8BAAyB/C,EAAzB,eAGbC,EAAS+C,KAAI,YAAqD,IAAlD9C,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC3C2C,EAAmB,IAAIC,KAAKA,KAAKC,MAAM/C,IACvCgD,ECnCe,SAACC,GAChC,IACMC,EAAUD,EAAO,GAGvB,OAJcE,KAAKC,MAAMH,EAAO,IAIjB,WADKC,EAAU,EAAKA,EAAhB,WAA8BA,IACd,SD8BFG,CAAkBnD,GACnCoD,EAAiB,IAAIR,KAAKA,KAAKC,MAAM/C,GAAmB,IAAXE,GAE7CqD,EAAaV,EAAiBW,qBAC9BC,EAAWH,EAAeE,qBAEhC,OACE,8BACE,eAACnB,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,8BAAIxC,EAAJ,IAAaC,KACb,oBAAGmB,UAAU,mBAAb,UAAiCqC,EAAjC,MAAgDE,QAElD,eAACnB,EAAA,EAAD,WACE,+FACA,mBAAGpB,UAAU,mBAAb,SAAiC8B,OAEnC,eAACV,EAAA,EAAD,WACE,8BAAIrC,EAAM6B,OAAV,6DACA,mBAAGZ,UAAU,mBAAb,SAAiCjB,EAAMyD,KAAK,eAZxCC,kC,GAtBCrF,IAAMC,WAiDhBoD,eAtDS,SAACC,GAEvB,MADc,KAqDDD,CAAyBQ,GEzDlCyB,E,kLAEiB,IACXlE,EAAauB,KAAKV,MAAlBb,SACRA,EAASD,GACTC,EAAST,O,+BAGD,IACAF,EAAYkC,KAAKV,MAAjBxB,QACR,OACE,8BACGA,EAAQ8C,mBAAmBe,KAAI,SAACiB,GAC/B,OACE,cAACC,EAAD,CAAyBjF,KAAME,EAAQgF,KAAKF,IAA3BA,Y,GAdHvF,IAAMC,WAsBjBoD,eA7BS,SAACC,GAIvB,MAHc,CACZ7C,QAAS6C,EAAM7C,WA2BJ4C,CAAyBiC,GCrBlCI,E,4MACJC,4BAA8B,SAACC,GAAO,IAC5BxE,EAAa,EAAKa,MAAlBb,SAERA,EAASP,EAAgB+E,IACzBxE,EAAST,M,uDAIT,OACE,eAACoD,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,cAAC,EAAD,MAEF,eAACD,EAAA,EAAD,CAAKC,GAAG,IAAR,UACE,eAAC4B,EAAA,EAAD,CAAMC,iBAAiB,WAAWC,GAAG,mBAAmBC,SAAUrD,KAAKgD,4BAAvE,UACE,cAACM,EAAA,EAAD,CAAKC,SAAS,WAAWC,MAAM,8EAC/B,cAACF,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,iFAEhC,cAAC,EAAD,c,GAnBanG,IAAMC,WA0BdoD,eA/BS,SAACC,GAEvB,MADc,KA8BDD,CAAyBqC,GCxBzBU,E,uKAVX,OACE,cAAC5G,EAAA,EAAD,CAAWC,OAAK,EAACC,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,QAA7D,SACE,cAACJ,EAAA,EAAD,CAAWE,MAAO,CAAEG,QAAS,OAAQC,eAAgB,SAAUC,QAAS,QAAxE,SACE,6D,GALWC,IAAMC,WCkBZoG,I,EAAAA,EAdf,WAEE,OACE,eAAC,IAAMC,SAAP,WACE,cAAC,EAAD,IACA,cAAC9G,EAAA,EAAD,UAEE,cAAC,EAAD,MAEF,cAAC,EAAD,QCJS+G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,6DCLDQ,GAAc,SAACvG,GAAD,OAAa,SAACwG,EAAOC,GAC9C,IAAMC,EAAa1G,EAAQwG,GAAO5F,MAC5B+F,EAAc3G,EAAQyG,GAAQ7F,MACpC,OAAI8F,EAAaC,EAAoB,EAC5BD,EAAaC,GAAqB,EAC/B,IAGDC,GAAa,SAAC5G,GAAD,OAAa,SAACwG,EAAOC,GAC7C,IAAMI,EAAuB7G,EAAQwG,GAAO1F,SAAS+C,KAAI,qBAAG1C,YACtD2F,EAAwB9G,EAAQyG,GAAQ3F,SAAS+C,KAAI,qBAAG1C,YAExD4F,EAAqBC,MAAMH,GAC3BI,EAAsBD,MAAMF,GAClC,OAAIC,EAAqBE,EAA4B,EAC5CF,EAAqBE,GAA6B,EAC/C,IChBDC,GAAgB,SAACpC,EAAQqC,GACpC,GAA2B,IAAvBA,EAAYpE,OAAc,OAAO,EACrC,IAAMqE,EAAkBJ,MAAMG,GAExBE,EAAgBvC,EAAOhE,SAAS+C,KAAI,qBAAG3C,MAAkB6B,UAG/D,OAAOqE,GAFyBJ,MAAMK,ICAlCC,GAAiB,CAAEtC,KAAM,GAAIuC,WAAY,GAAIzE,mBAAoB,GAAI0E,WAAY,WAAYxE,QAAS,CAAEyE,QAAS,KAkFxGzH,GAhFC0H,cAAa,oBAC1BC,GAAmC,SAAC9E,EAAO+E,GAC1C,IACMC,EADaD,EAAOhG,QAAQkG,QAAO,SAAChD,EAAQiD,GAAT,OAAoBA,EAAQ,MAC1CC,QAAO,SAACC,EAAKnD,EAAQiD,GAAd,oBAAC,gBAA6BE,GAA9B,mBAAoCF,EAAQjD,MAAW,IACnFoD,EAAgBC,OAAOC,KAAKP,GAIlC,OAAO,6BACFhF,GADL,IAEEmC,KAAM6C,EACNN,WAAYW,OAXW,eAc1BP,GAAmC,WAElC,OADAU,QAAQC,IAAI,UACLhB,MAhBkB,eAkB1BK,GAAmC,WAElC,OADAU,QAAQC,IAAI,WACLhB,MApBkB,eAsB1BK,GAA0B,SAAC9E,EAAO+E,GACjC,IAAMW,EAAgBX,EAAOhG,QAC7B,OAAO,6BACFiB,GADL,IAEE2E,WAAYe,OA1BW,eA6B1BZ,GAAoB,SAAC9E,EAAO+E,GAAY,IAAD,EACRA,EAAOhG,QAA7BC,EAD8B,EAC9BA,WAAYH,EADkB,EAClBA,MAQpB,OAPc,6BACTmB,GADS,IAEZG,QAAQ,6BACHH,EAAMG,SADJ,mBAEJnB,EAFI,uBAEagB,EAAMG,QAAQnB,IAF3B,CAEwCH,WAnCxB,eAwC1BiG,GAAuB,SAAC9E,EAAO+E,GAAY,IAAD,EACXA,EAAOhG,QAA7BC,EADiC,EACjCA,WAAYH,EADqB,EACrBA,MAQpB,OAPc,6BACTmB,GADS,IAEZG,QAAQ,6BACHH,EAAMG,SADJ,mBAEJnB,EAAagB,EAAMG,QAAQnB,GAAYiG,QAAO,SAACU,GAAD,OAAQA,IAAM9G,YA9CxC,eAmD1BiG,GAA2B,SAAC9E,GAE3B,IAAM4F,EAAa,CACjB,QAAWvB,IAEPwB,EAAeP,OAAOC,KAAKvF,EAAMG,SACjC2F,EAAiB9F,EAAM0E,WAAWO,QAAO,SAAChD,GAC9C,IAAM8D,EAAU,GAIhB,OAHAF,EAAaG,SAAQ,SAACf,GACpBc,EAAQE,KAAKL,EAAWX,GAAQjF,EAAMmC,KAAKF,GAASjC,EAAMG,QAAQ8E,SAE5Dc,EAAQG,UAAS,MAGrBC,EAASnG,EAAM2E,WACfyB,EAAgB,CACpB,SAAY1C,GACZ,QAAWK,IAEPsC,EAAgBP,EAAeQ,KAAKF,EAAcD,GAAQnG,EAAMmC,OAGtE,OAAO,6BACFnC,GADL,IAEEC,mBAAoBoG,OA3EG,GA8E1B5B,ICpFY8B,gBAAgB,CAC7BpJ,aCSIqJ,GAAQC,aAAYC,GAAUC,aAAgBC,OAEpDC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,SAE1B/D,M","file":"static/js/main.0149cb62.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container fluid style={{ backgroundColor: '#212529', color: '#fff' }}>\r\n        <Container style={{ display: 'flex', justifyContent: 'center', padding: '10px' }}>\r\n          <h1>Aviasales.ru by KRiEG1234</h1>\r\n        </Container>\r\n      </Container>\r\n\r\n    )\r\n  }\r\n};\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nconst getTickets = async () => {\r\n  const config = await axios.get('https://front-test.beta.aviasales.ru/search');\r\n  const { data } = await axios.get(`https://front-test.beta.aviasales.ru/tickets?searchId=${config.data.searchId}`);\r\n  const { tickets, stop } = data;\r\n  return { tickets, stop };\r\n}\r\n\r\nexport default getTickets;","import { createAction } from 'redux-actions';\r\nimport getTickets from '../Functions/getTickets';\r\nimport makeFakeTicketsList from '../Functions/makeFakeTicketsList'\r\n\r\n\r\nexport const buildTicketsList = createAction('TICKETS_LIST_BUILD');\r\nexport const sortTicketsList = createAction('TICKETS_LIST_SORT');\r\nexport const addFilter = createAction('FILTER_ADD');\r\nexport const removeFilter = createAction('FILTER_REMOVE');\r\n\r\nexport const updateTicketsListRequest = createAction('TICKETS_LIST_UPDATE_REQUEST');\r\nexport const updateTicketsListSuccess = createAction('TICKETS_LIST_UPDATE_SUCCESS');\r\nexport const updateTicketsListFailure = createAction('TICKETS_LIST_UPDATE_FAILURE');\r\n\r\nexport const updateTicketsList = async (dispatch) => {\r\n  dispatch(updateTicketsListRequest());\r\n  try {\r\n    const { tickets } = await getTickets();\r\n    dispatch(updateTicketsListSuccess(tickets));\r\n    dispatch(buildTicketsList());\r\n  } catch (e) {\r\n    dispatch(updateTicketsListFailure());\r\n    const fake = makeFakeTicketsList();\r\n  }\r\n};\r\n\r\n\r\n","export default () => {\r\n  return [{\r\n    price: 100,\r\n    carrier: 'string',\r\n    segments: [\r\n      {\r\n        origin: 'string',\r\n        destination: 'string',\r\n        date: 'string',\r\n        stops: ['string', 'string'],\r\n        duration: 1,\r\n      },\r\n      {\r\n        origin: 'string',\r\n        destination: 'string',\r\n        date: 'string',\r\n        stops: ['string'],\r\n        duration: 4,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    price: 999,\r\n    carrier: 'string',\r\n    segments: [\r\n      {\r\n        origin: 'string',\r\n        destination: 'string',\r\n        date: 'string',\r\n        stops: ['string', 'string'],\r\n        duration: 5,\r\n      },\r\n      {\r\n        origin: 'string',\r\n        destination: 'string',\r\n        date: 'string',\r\n        stops: ['string'],\r\n        duration: 2,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    price: 666,\r\n    carrier: 'string',\r\n    segments: [\r\n      {\r\n        origin: 'string',\r\n        destination: 'string',\r\n        date: 'string',\r\n        stops: ['string'],\r\n        duration: 3,\r\n      },\r\n      {\r\n        origin: 'string',\r\n        destination: 'string',\r\n        date: 'string',\r\n        stops: ['string'],\r\n        duration: 1,\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    price: 333,\r\n    carrier: 'string',\r\n    segments: [\r\n      {\r\n        origin: 'string',\r\n        destination: 'string',\r\n        date: 'string',\r\n        stops: ['string', 'string', 'string', 'string'],\r\n        duration: 6,\r\n      },\r\n      {\r\n        origin: 'string',\r\n        destination: 'string',\r\n        date: 'string',\r\n        stops: ['string', 'string',],\r\n        duration: 8,\r\n      }\r\n    ]\r\n  }]\r\n};","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addFilter, removeFilter, buildTicketsList } from '../Actions';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  const props = {\r\n    ticketsCount: state.tickets.buildedTicketsList.length,\r\n    filters: state.tickets.filters,\r\n  };\r\n  return props;\r\n}\r\n\r\nclass FilterBar extends React.Component {\r\n  filterTasksListHandler = (e) => {\r\n    e.preventDefault();\r\n    const { dispatch } = this.props;\r\n    dispatch(buildTicketsList());\r\n  }\r\n\r\n  updateFilterHandler = (value, typeOfFilter) => (e) => {\r\n    const { dispatch } = this.props;\r\n    const payload = {\r\n      filterType: typeOfFilter,\r\n      value\r\n    }\r\n    if (e.target.checked) dispatch(addFilter(payload));\r\n    else dispatch(removeFilter(payload));\r\n    dispatch(buildTicketsList());\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.filterTasksListHandler} className='rounded-lg my-2 p-2 shadow-lg'>\r\n        <Form.Group >\r\n          <Form.Label className='my-2 bold text-uppercase'>Количество пересадок</Form.Label>\r\n          <Form.Check className='my-2' type='checkbox' label='Все' onInput={this.updateFilterHandler(Infinity, 'byStops')} />\r\n          <Form.Check className='my-2' type='checkbox' label='Без пересадок' onInput={this.updateFilterHandler(0, 'byStops')} />\r\n          <Form.Check className='my-2' type='checkbox' label='1 пересадка' onInput={this.updateFilterHandler(1, 'byStops')} />\r\n          <Form.Check className='my-2' type='checkbox' label='2 пересадки' onInput={this.updateFilterHandler(2, 'byStops')} />\r\n          <Form.Check className='my-2' type='checkbox' label='3 пересадки' onInput={this.updateFilterHandler(3, 'byStops')} />\r\n        </Form.Group>\r\n        <Form.Label>Найдено: {this.props.ticketsCount} билетов</Form.Label>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FilterBar);","import React from 'react';\r\nimport { Card, Col, Image, Row } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { uniqueId } from 'lodash';\r\nimport styled from 'styled-components';\r\nimport { convertMinToHours } from '../Functions/convertTime'\r\n\r\nconst Styles = styled.div`\r\n.card:hover {\r\n  border: solid;\r\n  border-color: #2196F3;\r\n}\r\n`\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  const props = {}\r\n  return props;\r\n}\r\n\r\nclass TickedCard extends React.Component {\r\n  render() {\r\n    const { price, carrier, segments } = this.props.data;\r\n\r\n    return (\r\n      <Styles>\r\n        <Card className='rounded-lg my-2 p-2 shadow-lg text-uppercase'>\r\n          <Row>\r\n            <Col md='8' className='price' style={{ fontWeight: '600', fontSize: '24px', color: '#2196F3' }}>{price} р</Col>\r\n            <Col>\r\n              <Image src={`//pics.avs.io/99/36/${carrier}.png`} />\r\n            </Col>\r\n          </Row>\r\n          {segments.map(({ origin, destination, date, stops, duration }) => {\r\n            const originDateParsed = new Date(Date.parse(date));\r\n            const durationParsed = convertMinToHours(duration);\r\n            const distDateParsed = new Date(Date.parse(date) + duration * 60000);\r\n\r\n            const originTime = originDateParsed.toLocaleTimeString();\r\n            const distTime = distDateParsed.toLocaleTimeString();\r\n\r\n            return (\r\n              <div key={uniqueId()}>\r\n                <Row>\r\n                  <Col>\r\n                    <p>{origin}-{destination}</p>\r\n                    <p className='font-weight-bold'>{originTime} - {distTime}</p>\r\n                  </Col>\r\n                  <Col>\r\n                    <p>Время в пути</p>\r\n                    <p className='font-weight-bold'>{durationParsed}</p>\r\n                  </Col>\r\n                  <Col>\r\n                    <p>{stops.length} пересадок</p>\r\n                    <p className='font-weight-bold'>{stops.join(', ')}</p>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            )\r\n          })}\r\n        </Card>\r\n      </Styles>\r\n\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TickedCard);","export const convertMinToHours = (mins) => {\r\n  const hours = Math.trunc(mins / 60);\r\n  const minutes = mins % 60;\r\n\r\n  const minutesStr = (minutes > 9) ? minutes : `0${minutes}`\r\n  return hours + 'ч ' + minutesStr + 'м';\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { buildTicketsList, updateTicketsList } from '../Actions/index';\r\nimport TicketCard from './TicketCard';\r\n\r\nconst mapStateToProps = (state) => {\r\n  const props = {\r\n    tickets: state.tickets,\r\n  }\r\n  return props;\r\n}\r\n\r\nclass TicketsList extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { dispatch } = this.props;\r\n    dispatch(updateTicketsList);\r\n    dispatch(buildTicketsList());\r\n  }\r\n\r\n  render() {\r\n    const { tickets } = this.props;\r\n    return (\r\n      <div>\r\n        {tickets.buildedTicketsList.map((ticket) => {\r\n          return (\r\n            <TicketCard key={ticket} data={tickets.byId[ticket]} />\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TicketsList);","import React from 'react';\r\nimport { Col, Container, Row, Tab, Tabs } from 'react-bootstrap';\r\nimport FilterBar from '../Components/FilterBar';\r\nimport TicketsList from '../Components/TicketsList';\r\nimport { connect } from 'react-redux';\r\nimport { sortTicketsList, buildTicketsList } from '../Actions/index';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  const props = {};\r\n  return props;\r\n}\r\n\r\nclass MainPage extends React.Component {\r\n  sortTicketsListByPriceEvent = (t) => {\r\n    const { dispatch } = this.props;\r\n\r\n    dispatch(sortTicketsList(t));\r\n    dispatch(buildTicketsList());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col md='3'>\r\n          <FilterBar />\r\n        </Col>\r\n        <Col md='9'>\r\n          <Tabs defaultActiveKey='cheapest' id='tickets-sort-tab' onSelect={this.sortTicketsListByPriceEvent}>\r\n            <Tab eventKey='cheapest' title='Самый дешёвый'></Tab>\r\n            <Tab eventKey='fastest' title='Самый быстрый'></Tab>\r\n          </Tabs>\r\n          <TicketsList />\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MainPage);","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container fluid style={{ backgroundColor: '#212529', color: '#fff' }}>\r\n        <Container style={{ display: 'flex', justifyContent: 'center', padding: '10px' }}>\r\n          <p>created by KRiEG1234</p>\r\n        </Container>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import './App.css';\nimport React from 'react';\nimport Header from './Components/Header';\nimport { Container } from 'react-bootstrap';\nimport MainPage from './Pages/MainPage';\nimport Footer from './Components/Footer';\n\nfunction App() {\n\n  return (\n    <React.Fragment>\n      <Header />\n      <Container>\n\n        <MainPage />\n      </Container>\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as _ from 'lodash';\r\n\r\nexport const sortByPrice = (tickets) => (first, second) => {\r\n  const firstParam = tickets[first].price;\r\n  const secondParam = tickets[second].price;\r\n  if (firstParam > secondParam) return 1;\r\n  else if (firstParam < secondParam) return -1;\r\n  else return 0;\r\n};\r\n\r\nexport const sortByTime = (tickets) => (first, second) => {\r\n  const firstTicketDurations = tickets[first].segments.map(({ duration }) => duration);\r\n  const secondTicketDurations = tickets[second].segments.map(({ duration }) => duration);\r\n\r\n  const fastetsFirstTicket = _.min(firstTicketDurations);\r\n  const fastetsSecondTicket = _.min(secondTicketDurations);\r\n  if (fastetsFirstTicket > fastetsSecondTicket) return 1;\r\n  else if (fastetsFirstTicket < fastetsSecondTicket) return -1;\r\n  else return 0;\r\n\r\n}","import * as _ from 'lodash';\r\n\r\nexport const filterByStops = (ticket, stopsFilter) => {\r\n  if (stopsFilter.length === 0) return true;\r\n  const maxCountOfStops = _.min(stopsFilter);\r\n\r\n  const stopsInTicket = ticket.segments.map(({ stops }) => stops.length);\r\n  const maxCountOfStopsInTicket = _.max(stopsInTicket);\r\n\r\n  return maxCountOfStops >= maxCountOfStopsInTicket;\r\n};","import { handleActions } from 'redux-actions';\r\nimport * as _ from 'lodash';\r\n\r\nimport * as actions from '../Actions/index';\r\nimport { sortByPrice, sortByTime } from '../Functions/sortByCallbacks';\r\nimport { filterByStops } from '../Functions/filterCallbacks';\r\n\r\nconst defaultTickets = { byId: {}, allTickets: [], buildedTicketsList: [], sortOption: 'cheapest', filters: { byStops: [] } };\r\n\r\nconst tickets = handleActions({\r\n  [actions.updateTicketsListSuccess]: (state, action) => {\r\n    const newTickets = action.payload.filter((ticket, index) => (index < 10)); //NOTICE: ограничил число билетов\r\n    const newById = newTickets.reduce((acc, ticket, index) => ({ ...acc, [index]: ticket }), {});\r\n    const newAllTickets = Object.keys(newById);\r\n\r\n\r\n\r\n    return {\r\n      ...state,\r\n      byId: newById,\r\n      allTickets: newAllTickets,\r\n    }\r\n  },\r\n  [actions.updateTicketsListFailure]: () => { //NOTICE: перенеси в статус запроса\r\n    console.log('ALARM!');\r\n    return defaultTickets;\r\n  },\r\n  [actions.updateTicketsListRequest]: () => { //NOTICE: перенеси в статус запроса\r\n    console.log('wait...');\r\n    return defaultTickets;\r\n  },\r\n  [actions.sortTicketsList]: (state, action) => {\r\n    const newSortOption = action.payload;\r\n    return {\r\n      ...state,\r\n      sortOption: newSortOption,\r\n    }\r\n  },\r\n  [actions.addFilter]: (state, action) => {\r\n    const { filterType, value } = action.payload;\r\n    const newState = {\r\n      ...state,\r\n      filters: {\r\n        ...state.filters,\r\n        [filterType]: [...state.filters[filterType], value],\r\n      }\r\n    }\r\n    return newState;\r\n  },\r\n  [actions.removeFilter]: (state, action) => {\r\n    const { filterType, value } = action.payload;\r\n    const newState = {\r\n      ...state,\r\n      filters: {\r\n        ...state.filters,\r\n        [filterType]: state.filters[filterType].filter((v) => (v !== value))\r\n      }\r\n    };\r\n    return newState;\r\n  },\r\n  [actions.buildTicketsList]: (state) => {\r\n\r\n    const mapFilters = {\r\n      'byStops': filterByStops,\r\n    }\r\n    const filtersTypes = Object.keys(state.filters);\r\n    const filtredTickets = state.allTickets.filter((ticket) => {\r\n      const results = [];\r\n      filtersTypes.forEach((filter) => {\r\n        results.push(mapFilters[filter](state.byId[ticket], state.filters[filter]));\r\n      });\r\n      return !results.includes(false);\r\n    })\r\n\r\n    const sortBy = state.sortOption;\r\n    const mapSortOption = {\r\n      'cheapest': sortByPrice,\r\n      'fastest': sortByTime,\r\n    }\r\n    const sortedTickets = filtredTickets.sort(mapSortOption[sortBy](state.byId));\r\n\r\n\r\n    return {\r\n      ...state,\r\n      buildedTicketsList: sortedTickets,\r\n    }\r\n  }\r\n}, defaultTickets);\r\n\r\nexport default tickets;","import { combineReducers } from 'redux';\r\nimport tickets from './tickets';\r\n\r\nexport default combineReducers({\r\n  tickets\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducers from './Reducers/index';\nimport { applyMiddleware, createStore } from 'redux';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}